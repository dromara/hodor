<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.dromara.hodor.admin.mapper.UserMapper">

    <resultMap type="org.dromara.hodor.admin.entity.User" id="UserMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="username" column="username" jdbcType="VARCHAR"/>
        <result property="password" column="password" jdbcType="VARCHAR"/>
        <result property="email" column="email" jdbcType="VARCHAR"/>
        <result property="phone" column="phone" jdbcType="VARCHAR"/>
        <result property="tenantId" column="tenant_id" jdbcType="INTEGER"/>
        <result property="createdAt" column="created_at" jdbcType="TIMESTAMP"/>
        <result property="updatedAt" column="updated_at" jdbcType="TIMESTAMP"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="UserMap">
        select
          id, username, password, email, phone, tenant_id, created_at, updated_at
        from hodor_user
        where id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="UserMap">
        select
          id, username, email, phone, tenant_id, created_at, updated_at
        from hodor_user
        <where>
            <if test="user.id != null">
                and id = #{user.id}
            </if>
            <if test="user.username != null and user.username != ''">
                and username = #{user.username}
            </if>
            <if test="user.email != null and user.email != ''">
                and email = #{user.email}
            </if>
            <if test="user.phone != null and user.phone != ''">
                and phone = #{user.phone}
            </if>
            <if test="user.tenantId != null">
                and tenant_id = #{user.tenantId}
            </if>
            <if test="user.createdAt != null">
                and created_at = #{user.createdAt}
            </if>
            <if test="user.updatedAt != null">
                and updated_at = #{user.updatedAt}
            </if>
        </where>
        limit #{pageNo}, #{pageSize}
    </select>

    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from hodor_user
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="username != null and username != ''">
                and username = #{username}
            </if>
            <if test="password != null and password != ''">
                and password = #{password}
            </if>
            <if test="email != null and email != ''">
                and email = #{email}
            </if>
            <if test="phone != null and phone != ''">
                and phone = #{phone}
            </if>
            <if test="tenantId != null">
                and tenant_id = #{tenantId}
            </if>
            <if test="createdAt != null">
                and created_at = #{createdAt}
            </if>
            <if test="updatedAt != null">
                and updated_at = #{updatedAt}
            </if>
        </where>
    </select>

    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into hodor_user(username, password, email, phone, tenant_id, created_at, updated_at)
        values
        <foreach collection="entities" item="entity" separator=",">
        (#{entity.username}, #{entity.password}, #{entity.email}, #{entity.phone}, #{entity.tenantId}, #{entity.createdAt}, #{entity.updatedAt})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into hodor_user(username, password, email, phone, tenant_id, created_at, updated_at)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.username}, #{entity.password}, #{entity.email}, #{entity.phone}, #{entity.tenantId}, #{entity.createdAt}, #{entity.updatedAt})
        </foreach>
        on duplicate key update
        username = values(username),
        password = values(password),
        email = values(email),
        phone = values(phone),
        tenant_id = values(tenant_id),
        created_at = values(created_at),
        updated_at = values(updated_at)
    </insert>

</mapper>

